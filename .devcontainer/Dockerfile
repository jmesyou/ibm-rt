# Copyright IBM Corp. and others 2019
#
# This program and the accompanying materials are made available under
# the terms of the Eclipse Public License 2.0 which accompanies this
# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
# or the Apache License, Version 2.0 which accompanies this distribution and
# is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# This Source Code may also be made available under the following
# Secondary Licenses when the conditions for such availability set
# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
# General Public License, version 2 with the GNU Classpath
# Exception [1] and GNU General Public License, version 2 with the
# OpenJDK Assembly Exception [2].
#
# [1] https://www.gnu.org/software/classpath/license.html
# [2] https://openjdk.org/legal/assembly-exception.html
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception

# Generated by: mkdocker.sh --tag=openj9 --dist=ubuntu --version=18.04 --gitcache=no --jdk=11 --build --print

# To use this docker file:
# First, copy your public ssh key into authorized_keys.
# Then, in the directory containing the Dockerfile, authorized_keys
# file, and known_hosts file, run:
#   docker build --tag openj9 --file Dockerfile .
#
# To start a container based on the resulting image, run this command:
#   docker run -it openj9

FROM --platform=amd64 ubuntu:20.04 AS base

# Install required OS tools.

RUN apt-get update \
 && apt-get install -qq -y --no-install-recommends \
    software-properties-common lsb-release wget gpg \
 && add-apt-repository ppa:ubuntu-toolchain-r/test \
 # python 3.7+
 && add-apt-repository ppa:deadsnakes/ppa \
 # cmake 3.17+
 && wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null \
 && apt-add-repository "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main" \
 && apt-get update \
 && apt-get install -qq -y --no-install-recommends \
    ant \
    ant-contrib \
    autoconf \
    bash-completion \
    build-essential \
    ca-certificates \
    cmake \
    cpio \
    curl \
    direnv \
    file \
    g++-7 \
    gcc-7 \
    gdb \
    git \
    libasound2-dev \
    libcups2-dev \
    libdwarf-dev \
    libelf-dev \
    libexpat1-dev \
    libffi-dev \
    libfontconfig \
    libfontconfig1-dev \
    libfreetype6-dev \
    libnuma-dev \
    libssl-dev \
    libx11-dev \
    libxext-dev \
    libxrandr-dev \
    libxrender-dev \
    libxt-dev \
    libxtst-dev \
    make \
    nasm \
    openssh-client \
    openssh-server \
    perl \
    pkg-config \
    ssh \
    systemtap-sdt-dev \
    openjdk-11-jdk \
    unzip \
    vim \
    xvfb \
    zip \
    zlib1g-dev \
    python3.7 \
    python3-pip \
 && rm -rf /var/lib/apt/lists/*

ENV CC=gcc-7 CXX=g++-7 CMAKE_EXPORT_COMPILE_COMMANDS=1

# Run ldconfig to discover newly installed shared libraries.
RUN for dir in lib lib64 lib/x86_64-linux-gnu ; do echo /usr/local/$dir ; done > /etc/ld.so.conf.d/usr-local.conf \
 && ldconfig

# Configure sshd.
RUN mkdir /var/run/sshd \
 && sed -i -e 's|#PermitRootLogin|PermitRootLogin|' \
           -e 's|#RSAAuthentication.*|RSAAuthentication yes|' \
           -e 's|#PubkeyAuthentication.*|PubkeyAuthentication yes|' /etc/ssh/sshd_config

# SSH login fix so user is not kicked off after login.
RUN sed -i -e 's|session\s*required\s*pam_loginuid.so|session optional pam_loginuid.so|' /etc/pam.d/sshd

# Expose SSH port.
EXPOSE 22

# Download and install boot JDKs.
ENV BOOT_JDK_ROOT=/usr/share/jdk
COPY scripts/fetch_jdk.sh /usr/bin/fetch_jdk.sh
RUN bash /usr/bin/fetch_jdk.sh

# dot files configuration
RUN sh -c "$(curl -fsLS get.chezmoi.io)" -- init --apply jmesyou \
 && pip install pygments

USER root
