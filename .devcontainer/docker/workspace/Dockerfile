# Copyright IBM Corp. and others 2019
#
# This program and the accompanying materials are made available under
# the terms of the Eclipse Public License 2.0 which accompanies this
# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
# or the Apache License, Version 2.0 which accompanies this distribution and
# is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# This Source Code may also be made available under the following
# Secondary Licenses when the conditions for such availability set
# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
# General Public License, version 2 with the GNU Classpath
# Exception [1] and GNU General Public License, version 2 with the
# OpenJDK Assembly Exception [2].
#
# [1] https://www.gnu.org/software/classpath/license.html
# [2] https://openjdk.org/legal/assembly-exception.html
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception

# Generated by: mkdocker.sh --tag=openj9 --dist=ubuntu --version=18.04 --gitcache=no --jdk=11 --build --print

# To use this docker file:
# First, copy your public ssh key into authorized_keys.
# Then, in the directory containing the Dockerfile, authorized_keys
# file, and known_hosts file, run:
#   docker build --tag openj9 --file Dockerfile .
#
# To start a container based on the resulting image, run this command:
#   docker run -it openj9

FROM rockylinux:9 AS base

RUN dnf upgrade -y \
 && dnf group install -y --with-optional "Development Tools" \
 && dnf install -y \
    alsa-lib-devel \
    cups-devel \
    freetype-devel \
    fontconfig-devel \
    libffi-devel \
    libXtst-devel libXt-devel libXrender-devel libXrandr-devel libXi-devel \
    openmpi-devel

FROM base as development

SHELL ["/bin/bash", "-c"]

RUN dnf install -y \
    findutils \
    git \
    openssh \
    sudo

RUN python3 -m ensurepip \
 && pip3 install --no-cache --upgrade pip setuptools

FROM development as user

ARG USERNAME=vscode

RUN adduser \
      --groups wheel \
      --create-home \
      --shell /bin/bash \
      ${USERNAME} \
  && echo %${USERNAME} ALL=\(ALL\) NOPASSWD:ALL > /etc/sudoers.d/${USERNAME} \
  && chmod 0440 /etc/sudoers.d/${USERNAME}

USER $USERNAME

ENV EXPORT_COMPILE_COMMANDS=1
# sdk manager
RUN curl -s "https://get.sdkman.io" | bash \
 && source "$HOME/.sdkman/bin/sdkman-init.sh" \
 && sdk install java \
 && sdk install ant \
 && sdk install gradle
